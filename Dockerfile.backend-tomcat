# ---- Backend WAR on External Tomcat (Spring Boot 3.x, JDK17, Jakarta EE) ----

# 1) Build stage: produce WAR (apps.war) from multi-module project
FROM maven:3.9.6-eclipse-temurin-17 AS builder
WORKDIR /workspace
COPY . .
RUN mvn -q -DskipTests -pl cheng-admin -am package

# 2) Runtime stage: Tomcat 10.1 on JDK17 (Jakarta namespace)
FROM tomcat:10.1-jdk17-temurin

# 安裝 Chrome 和 ChromeDriver（用於爬蟲功能）
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    unzip \
    --no-install-recommends \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg \
    && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d. -f1) \
    && wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROME_VERSION}.0.6778.85/linux64/chromedriver-linux64.zip" -O /tmp/chromedriver.zip || \
       wget -q "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}" -O /tmp/version && \
       wget -q "https://chromedriver.storage.googleapis.com/$(cat /tmp/version)/chromedriver_linux64.zip" -O /tmp/chromedriver.zip \
    && unzip /tmp/chromedriver.zip -d /tmp/ \
    && mv /tmp/chromedriver-linux64/chromedriver /usr/bin/chromedriver 2>/dev/null || mv /tmp/chromedriver /usr/bin/chromedriver \
    && chmod +x /usr/bin/chromedriver \
    && rm -rf /tmp/chromedriver* \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Clean default webapps
RUN rm -rf /usr/local/tomcat/webapps/*

# Deploy our WAR as ROOT.war
COPY --from=builder /workspace/cheng-admin/target/apps.war /usr/local/tomcat/webapps/ROOT.war

# Timezone（JVM 參數與解密密碼改由執行環境提供，例如設置 JASYPT_ENCRYPTOR_PASSWORD 或 JAVA_OPTS）
ENV TZ=Asia/Taipei

EXPOSE 8080
CMD ["catalina.sh", "run"]
