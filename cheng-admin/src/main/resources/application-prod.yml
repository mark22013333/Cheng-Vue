# 資料來源設定
spring:
  data:
    # redis 設定
    redis:
      # 地址
      host: ${REDIS_HOST:localhost}
      # 埠號，預設為6379
      port: ${REDIS_PORT:6379}
      # 資料庫索引
      database: 0
      # 密碼
      password: ${REDIS_PASSWORD:}
      # 連線逾時時間
      timeout: 10s
      lettuce:
        pool:
          # 連線池中的最小閒置連線
          min-idle: 0
          # 連線池中的最大閒置連線
          max-idle: 8
          # 連線池的最大資料庫連線數
          max-active: 8
          # 連線池最大阻塞等待時間（使用負值表示沒有限制）
          max-wait: -1ms
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主庫資料來源
      master:
        # 優先使用 DB_URL；否則依 Zeabur MySQL 變數組合
        url: ${DB_URL:jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:cool-apps}?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Taipei&useSSL=false&allowPublicKeyRetrieval=true&allowMultiQueries=true}
        username: ${DB_USERNAME:${MYSQL_USERNAME:root}}
        password: ${DB_PASSWORD:${MYSQL_PASSWORD:${MYSQL_ROOT_PASSWORD:}}}
      # 從庫資料來源
      slave:
        # 從資料來源開關/預設關閉
        enabled: false
        url:
        username:
        password:
      # 初始連線數
      initialSize: 5
      # 最小連線池數量
      minIdle: 10
      # 最大連線池數量
      maxActive: 20
      # 設定取得連線等待逾時的時間
      maxWait: 60000
      # 設定連線逾時時間
      connectTimeout: 30000
      # 設定網路逾時時間
      socketTimeout: 60000
      # 設定間隔多久才進行一次檢測，檢測需要關閉的閒置連線，單位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 設定一個連線在池中最小生存的時間，單位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 設定一個連線在池中最大生存的時間，單位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 設定檢測連線是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 設定白名單，不填則允許所有訪問
        allow:
        url-pattern: /druid/*
        # 控制台管理使用者名和密碼
        login-username: ENC(Uvanh/oVJo1l++vxWC8Dpmok57ocQNqa0dZYtUNDMW6914PLERelO0iwuTJYGL4i)
        login-password: ENC(1+bjj9SBwCEwKnDuoZKiIo6xsRLrSTAiALLp+IEex5LhPj/zL8mZMUNmlZ9Zk32D)
      filter:
        stat:
          enabled: true
          # 慢SQL記錄
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

# 正式環境專用設定
logging:
  file:
    path: /opt/cool-apps/logs

# 專案相關設定 - 正式環境
cheng:
  profile: /opt/cool-apps/uploadFile

# 爬蟲設定 - 正式環境（Chrome 安裝在容器內）
crawler:
  selenium:
    mode: local
    chrome-driver-path: /usr/bin/chromedriver

# LINE Bot 設定 - 正式環境（使用環境變數）
line:
  # Webhook 設定
  webhook:
    # 正式環境的 Webhook Base URL（必須是公開可存取的網域）
    # 範例：https://api.ap-domain.com
    base-url: ${LINE_WEBHOOK_BASE_URL:https://ap-domain.com}
  # LINE Bot SDK 標準配置（整合主頻道設定）
  bot:
    # === LINE SDK 必要參數 ===
    channel-token: ${LINE_BOT_CHANNEL_TOKEN}
    channel-secret: ${LINE_BOT_CHANNEL_SECRET}
    # 注意：專案使用自定義多頻道架構 /webhook/line/{botBasicId}，不使用 SDK 自動配置的 handler
    # === 擴充參數（主頻道設定）===
    enabled: ${LINE_MAIN_ENABLED:false}  # 是否啟用主頻道自動載入
    channel-name: ${LINE_MAIN_CHANNEL_NAME:主頻道}  # 頻道名稱
    channel-id: ${LINE_MAIN_CHANNEL_ID:}  # Channel ID（加密）
    bot-basic-id: ${LINE_MAIN_BOT_BASIC_ID:}  # Bot Basic ID（例如：@322okyxf）