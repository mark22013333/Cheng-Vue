name: Cheng-Vue CI/CD

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: cheng-vue-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: cheng-ui/package-lock.json

      - name: Install frontend dependencies
        working-directory: cheng-ui            # <- 若前端不在 cheng-ui，請調整路徑
        run: npm ci

      - name: Build frontend (repo script)
        run: bash cheng.deploy/build-frontend.sh

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: |
            cheng.deploy/frontend-dist       # 與 deploy-to-server.sh 的預設相符

  build-backend:
    name: Build Backend (Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java ${{ env.JAVA_VERSION }} and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Build backend (Maven)
        working-directory: cheng-admin        # <- 後端主模組
        run: mvn -B -DskipTests package

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-wars
          path: |
            cheng-admin/target/apps.war       # 由 cheng-admin 的 pom.xml <finalName> 決定

  deploy:
    name: Deploy (needs build jobs)
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    environment: production                   # <- 可選：若要使用 Environment 的審核機制
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend-dist                 # deploy-to-server.sh 預設 LOCAL_FRONTEND_DIR=frontend-dist

      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-wars
          path: backend-wars


      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Manage known_hosts (secret or ssh-keyscan)
        env:
          KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          SERVER_PORT: ${{ secrets.SSH_PORT }}
        run: |
          set -e
          mkdir -p ~/.ssh
          if [ -n "$KNOWN_HOSTS" ]; then
            echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts
          else
            SERVER_PORT=${SERVER_PORT:-22}
            ssh-keyscan -p "$SERVER_PORT" -H "$DEPLOY_HOST" >> ~/.ssh/known_hosts
          fi

      - name: Deploy backend WAR to server (script)
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          TOMCAT_WEBAPPS_DIR: ${{ secrets.TOMCAT_WEBAPPS_DIR }}
          APP_NAME: apps
          WAR_FILE: backend-wars/apps.war
          HEALTH_PROTOCOL: https
          HEALTH_PATH: /prod-api/system/user/profile
        run: bash cheng.deploy/deploy-backend.sh

      - name: Deploy frontend static files (script)
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          LOCAL_FRONTEND_DIR: frontend-dist
          FRONTEND_DIR: /var/www/cheng-vue/frontend
        run: bash cheng.deploy/deploy-to-server.sh
