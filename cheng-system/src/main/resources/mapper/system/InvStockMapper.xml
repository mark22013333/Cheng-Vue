<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cheng.system.mapper.InvStockMapper">

    <resultMap type="InvStock" id="InvStockResult">
        <result property="stockId" column="stock_id"/>
        <result property="itemId" column="item_id"/>
        <result property="itemCode" column="item_code"/>
        <result property="itemName" column="item_name"/>
        <result property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name"/>
        <result property="specification" column="specification"/>
        <result property="unit" column="unit"/>
        <result property="minStock" column="min_stock"/>
        <result property="maxStock" column="max_stock"/>
        <result property="location" column="location"/>
        <result property="totalQuantity" column="total_quantity"/>
        <result property="availableQty" column="available_qty"/>
        <result property="borrowedQty" column="borrowed_qty"/>
        <result property="reservedQty" column="reserved_qty"/>
        <result property="damagedQty" column="damaged_qty"/>
        <result property="lostQty" column="lost_qty"/>
        <result property="lastInTime" column="last_in_time"/>
        <result property="lastOutTime" column="last_out_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectInvStockVo">
        select IFNULL(s.stock_id, 0) as stock_id,
               i.item_id,
               i.item_code,
               i.item_name,
               i.category_id,
               IFNULL(c.category_name, '') as category_name,
               IFNULL(i.specification, '') as specification,
               IFNULL(i.unit, '') as unit,
               IFNULL(i.min_stock, 0) as min_stock,
               IFNULL(i.max_stock, 0) as max_stock,
               IFNULL(i.location, '') as location,
               IFNULL(s.total_quantity, 0) as total_quantity,
               IFNULL(s.available_qty, 0)  as available_qty,
               IFNULL(s.borrowed_qty, 0)   as borrowed_qty,
               IFNULL(s.reserved_qty, 0)   as reserved_qty,
               IFNULL(s.damaged_qty, 0)    as damaged_qty,
               IFNULL(s.lost_qty, 0)       as lost_qty,
               s.last_in_time,
               s.last_out_time,
               IFNULL(s.update_time, i.update_time) as update_time
        from inv_item i
                 left join inv_stock s on s.item_id = i.item_id
                 left join inv_category c on i.category_id = c.category_id
    </sql>

    <select id="selectInvStockList" parameterType="InvStock" resultMap="InvStockResult">
        <include refid="selectInvStockVo"/>
        <where>
            i.del_flag = '0'
            <if test="itemCode != null and itemCode != ''">and i.item_code like concat('%', #{itemCode}, '%')</if>
            <if test="itemName != null and itemName != ''">and i.item_name like concat('%', #{itemName}, '%')</if>
            <if test="categoryId != null">and i.category_id = #{categoryId}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 開始最後進貨時間 -->
                and date_format(s.last_in_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 結束最後進貨時間 -->
                and date_format(s.last_in_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
            </if>
        </where>
        order by IFNULL(s.update_time, i.update_time) desc
    </select>

    <select id="selectInvStockByStockId" parameterType="Long" resultMap="InvStockResult">
        <include refid="selectInvStockVo"/>
        where s.stock_id = #{stockId}
    </select>

    <select id="selectInvStockByItemId" parameterType="Long" resultMap="InvStockResult">
        <include refid="selectInvStockVo"/>
        where s.item_id = #{itemId}
    </select>

    <select id="selectLowStockList" resultMap="InvStockResult">
        <include refid="selectInvStockVo"/>
        where IFNULL(s.available_qty, 0) &lt;= 10
        order by IFNULL(s.available_qty, 0) asc
    </select>

    <select id="selectOutOfStockList" resultMap="InvStockResult">
        <include refid="selectInvStockVo"/>
        where IFNULL(s.total_quantity, 0) = 0
        order by s.update_time desc
    </select>


    <insert id="insertInvStock" parameterType="InvStock" useGeneratedKeys="true" keyProperty="stockId">
        insert into inv_stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemId != null">item_id,</if>
            <if test="totalQuantity != null">total_quantity,</if>
            <if test="availableQty != null">available_qty,</if>
            <if test="borrowedQty != null">borrowed_qty,</if>
            <if test="reservedQty != null">reserved_qty,</if>
            <if test="damagedQty != null">damaged_qty,</if>
            <if test="lostQty != null">lost_qty,</if>
            <if test="lastInTime != null">last_in_time,</if>
            <if test="lastOutTime != null">last_out_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemId != null">#{itemId},</if>
            <if test="totalQuantity != null">#{totalQuantity},</if>
            <if test="availableQty != null">#{availableQty},</if>
            <if test="borrowedQty != null">#{borrowedQty},</if>
            <if test="reservedQty != null">#{reservedQty},</if>
            <if test="damagedQty != null">#{damagedQty},</if>
            <if test="lostQty != null">#{lostQty},</if>
            <if test="lastInTime != null">#{lastInTime},</if>
            <if test="lastOutTime != null">#{lastOutTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateInvStock" parameterType="InvStock">
        update inv_stock
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="totalQuantity != null">total_quantity = #{totalQuantity},</if>
            <if test="availableQty != null">available_qty = #{availableQty},</if>
            <if test="borrowedQty != null">borrowed_qty = #{borrowedQty},</if>
            <if test="reservedQty != null">reserved_qty = #{reservedQty},</if>
            <if test="damagedQty != null">damaged_qty = #{damagedQty},</if>
            <if test="lostQty != null">lost_qty = #{lostQty},</if>
            <if test="lastInTime != null">last_in_time = #{lastInTime},</if>
            <if test="lastOutTime != null">last_out_time = #{lastOutTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where stock_id = #{stockId}
    </update>

    <update id="updateStockQuantity" parameterType="java.util.Map">
        update inv_stock
        set total_quantity = total_quantity + #{quantity},
            available_qty  = available_qty + #{quantity},
            update_time    = now()
        where item_id = #{itemId}
    </update>

    <update id="updateBorrowedQuantity" parameterType="java.util.Map">
        update inv_stock
        set borrowed_qty  = borrowed_qty + #{quantity},
            available_qty = available_qty - #{quantity},
            update_time   = now()
        where item_id = #{itemId}
    </update>

    <update id="updateReturnQuantity" parameterType="java.util.Map">
        update inv_stock
        set borrowed_qty  = borrowed_qty - #{quantity},
            available_qty = available_qty + #{quantity},
            update_time   = now()
        where item_id = #{itemId}
    </update>

    <delete id="deleteInvStockByStockId" parameterType="Long">
        delete
        from inv_stock
        where stock_id = #{stockId}
    </delete>

    <delete id="deleteInvStockByStockIds" parameterType="String">
        delete from inv_stock where stock_id in
        <foreach item="stockId" collection="array" open="(" separator="," close=")">
            #{stockId}
        </foreach>
    </delete>

</mapper>
