server {
    listen      443 ssl http2 default_server;
    listen      [::]:443 ssl http2 default_server;
    server_name ${DEPLOY_HOST};

    # SSL 設定
    ssl_certificate     "/etc/letsencrypt/live/${DEPLOY_HOST}/fullchain.pem";
    ssl_certificate_key "/etc/letsencrypt/live/${DEPLOY_HOST}/privkey.pem";
    ssl_session_cache   shared:SSL:1m;
    ssl_session_timeout 10m;
    ssl_ciphers         PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;

    # Gzip 壓縮設定
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 安全標頭
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # 共用代理標頭
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;

    # LINE Webhook 處理 - 轉發到後端（優先順序最高）
    # LINE 平台會直接呼叫 /webhook/line/{botBasicId}
    location /webhook/line/ {
        proxy_pass http://127.0.0.1:8080/webhook/line/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # LINE Webhook 重要設定
        proxy_pass_request_headers on;
        proxy_set_header X-Line-Signature $http_x_line_signature;
        
        # Webhook 逾時設定
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # 記錄 Webhook 請求
        access_log /var/log/nginx/line_webhook_access.log;
        error_log /var/log/nginx/line_webhook_error.log;
    }

    # Cheng-Vue 後端應用程式 - 處理 /prod-api/ 路徑
    location /prod-api/ {
        proxy_pass http://127.0.0.1:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 確認傳遞 Authorization 標頭
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        
        # WebSocket 支援（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # API 請求逾時設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 支援大檔案上傳
        client_max_body_size 10M;
        
        # CORS 處理
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # 處理 OPTIONS 預檢請求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }



    # Cheng-Vue 前端後台管理系統 - Vue Router History 模式支援
    # try_files 會先尋找實體檔案，找不到則返回 index.html 由 Vue Router 處理
    location / {
        root ${FRONTEND_DIR};
        try_files $uri $uri/ /index.html;
        index index.html;
        
        # 靜態資源快取
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
    }

    # 原有的餐廳搜尋應用程式
    location /searchRestaurant/ {
        root /var/www;
        index index.html;
        try_files $uri $uri/ /searchRestaurant/index.html;
    }

    # 原有的圖片服務
    location /images/ {
        alias /images/cent/;
        autoindex on;

        types {
            image/png  png;
            image/jpeg jpg jpeg;
            image/gif  gif;
            image/svg+xml svg;
        }

        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }

    # 錯誤頁面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root ${FRONTEND_DIR};
        internal;
    }
    
    location = /50x.html {
        root ${FRONTEND_DIR};
        internal;
    }

    # 日誌設定
    access_log /var/log/nginx/cheng_vue_access.log;
    error_log /var/log/nginx/cheng_vue_error.log;
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ${DEPLOY_HOST};
    return 301 https://$server_name$request_uri;
}
