#!/bin/bash

# Cheng-Vue ÈÉ®ÁΩ≤Âà∞ Linux ‰º∫ÊúçÂô®ËÖ≥Êú¨
# Áî®ÈÄîÔºöÂ∞áÂâçÁ´ØÊ™îÊ°àÂíå Nginx Ë®≠ÂÆöÈÉ®ÁΩ≤Âà∞‰º∫ÊúçÂô®

set -euo pipefail  # ÈÅáÂà∞ÈåØË™§Á´ãÂç≥ÂÅúÊ≠¢ÔºåÊú™ÂÆöÁæ©ËÆäÊï∏Ë¶ñÁÇ∫ÈåØË™§ÔºåÁÆ°Á∑öÈåØË™§Âç≥Â§±Êïó

# ÈÉ®ÁΩ≤Ë®≠ÂÆöÔºàÂèØÁî±Áí∞Â¢ÉË¶ÜËìãÔºåÈÅøÂÖçÊääÊïèÊÑüË≥áË®äÂØ´Ê≠ªÂú®Ê™îÊ°à‰∏≠Ôºâ
SERVER_HOST="${DEPLOY_HOST:-${SERVER_HOST:-example.com}}"
SERVER_USER="${DEPLOY_USER:-${SERVER_USER:-deploy}}"
SERVER_PORT="${SSH_PORT:-${SERVER_PORT:-22}}"
FRONTEND_DIR="${FRONTEND_DIR:-/var/www/cheng-vue/frontend}"
NGINX_CONFIG_DIR="${NGINX_CONFIG_DIR:-/etc/nginx/conf.d}"

# Êú¨Ê©üÊ™îÊ°àË∑ØÂæëÔºàÂèØÁî±Áí∞Â¢ÉË¶ÜËìãÔºâ
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
LOCAL_FRONTEND_DIR="${LOCAL_FRONTEND_DIR:-frontend-dist}"
LOCAL_NGINX_CONFIG="${LOCAL_NGINX_CONFIG:-$SCRIPT_DIR/nginx/proxy-ssl-corrected.conf}"

echo "üöÄ ÈñãÂßãÈÉ®ÁΩ≤ Cheng-Vue ÂâçÁ´ØÂà∞‰º∫ÊúçÂô®..."

# Ê™¢Êü•Êú¨Ê©üÊ™îÊ°àÊòØÂê¶Â≠òÂú®
if [ ! -d "$LOCAL_FRONTEND_DIR" ]; then
    echo "‚ùå ÈåØË™§: Êâæ‰∏çÂà∞ÂâçÁ´ØÂª∫ÁΩÆÊ™îÊ°àÔºåË´ãÂÖàÂü∑Ë°å build-frontend.sh"
    exit 1
fi

if [ ! -f "$LOCAL_NGINX_CONFIG" ]; then
    echo "‚ùå ÈåØË™§: Êâæ‰∏çÂà∞ Nginx Ë®≠ÂÆöÊ™îÊ°à"
    exit 1
fi

echo "üìã ÈÉ®ÁΩ≤Ë®≠ÂÆöÔºö"
echo "  üñ•Ô∏è  ‰º∫ÊúçÂô®: $SERVER_USER@$SERVER_HOST:$SERVER_PORT"
echo "  üìÅ ÂâçÁ´ØÁõÆÈåÑ: $FRONTEND_DIR"
echo "  ‚öôÔ∏è  Nginx Ë®≠ÂÆö: $NGINX_CONFIG_DIR"

# Èùû‰∫íÂãïÊ®°ÂºèÔºàCI ÂèãÂñÑÔºâ
echo "‚úÖ Á¢∫Ë™çÈÉ®ÁΩ≤ÔºàÈùû‰∫íÂãïÊ®°ÂºèÔºâ"

echo "üì¶ ÈñãÂßã‰∏äÂÇ≥Ê™îÊ°à..."

# Âª∫Á´ã‰º∫ÊúçÂô®ÁõÆÈåÑ‰∏¶Ë®≠ÂÆöÊ¨äÈôê
echo "üìÅ Âª∫Á´ã‰º∫ÊúçÂô®ÁõÆÈåÑ..."
ssh -p "$SERVER_PORT" -o StrictHostKeyChecking=yes -o UserKnownHostsFile="$HOME/.ssh/known_hosts" \
  "$SERVER_USER@$SERVER_HOST" "sudo mkdir -p '$FRONTEND_DIR' && sudo chown -R '$SERVER_USER':'$SERVER_USER' '$FRONTEND_DIR' && sudo chmod -R 755 '$FRONTEND_DIR'"

# Ê∏ÖÈô§ÁõÆÊ®ôÁõÆÈåÑ
echo "üßπ ËàáÁõÆÊ®ôÁõÆÈåÑÂêåÊ≠•ÔºàÂà™Èô§ÈÅ†Á´ØÂ§öÈ§òÊ™îÊ°àÔºâ..."

# ‰∏äÂÇ≥ÂâçÁ´ØÊ™îÊ°à
echo "üì§ ‰∏äÂÇ≥ÂâçÁ´ØÊ™îÊ°à..."
rsync -avz --delete -e "ssh -p $SERVER_PORT -o StrictHostKeyChecking=yes -o UserKnownHostsFile=$HOME/.ssh/known_hosts" \
  "$LOCAL_FRONTEND_DIR/" "$SERVER_USER@$SERVER_HOST:$FRONTEND_DIR/"

# ‰∏äÂÇ≥ Nginx Ë®≠ÂÆöÔºà‰ª•Áí∞Â¢ÉËÆäÊï∏Â•óÁâàÔºâ
echo "‚öôÔ∏è Ê∫ñÂÇô‰∏¶‰∏äÂÇ≥ Nginx Ë®≠ÂÆöÔºàÊ≥®ÂÖ• DEPLOY_HOSTÔºâ..."
TMP_NGINX_FILE="$(mktemp)"
trap 'rm -f "$TMP_NGINX_FILE"' EXIT
if command -v envsubst >/dev/null 2>&1; then
  DEPLOY_HOST="$SERVER_HOST" FRONTEND_DIR="$FRONTEND_DIR" \
    envsubst '${DEPLOY_HOST} ${FRONTEND_DIR}' < "$LOCAL_NGINX_CONFIG" > "$TMP_NGINX_FILE"
else
  # Á∞°ÊòìÂæåÂÇôÔºöËôïÁêÜ ${DEPLOY_HOST} Ëàá ${FRONTEND_DIR}
  sed "s#\${DEPLOY_HOST}#${SERVER_HOST}#g; s#\${FRONTEND_DIR}#${FRONTEND_DIR}#g" \
    "$LOCAL_NGINX_CONFIG" > "$TMP_NGINX_FILE"
fi

scp -P "$SERVER_PORT" -o StrictHostKeyChecking=yes -o UserKnownHostsFile="$HOME/.ssh/known_hosts" \
  "$TMP_NGINX_FILE" "$SERVER_USER@$SERVER_HOST:/tmp/proxy-ssl-new.conf"

# Âú®‰º∫ÊúçÂô®‰∏äÂü∑Ë°åË®≠ÂÆö
echo "üîß Ë®≠ÂÆö Nginx..."
ssh -p "$SERVER_PORT" -o StrictHostKeyChecking=yes -o UserKnownHostsFile="$HOME/.ssh/known_hosts" \
  "$SERVER_USER@$SERVER_HOST" << EOF
    # ÂÇô‰ªΩÁèæÊúâË®≠ÂÆö
    if [ -f "$NGINX_CONFIG_DIR/proxy-ssl.conf" ]; then
      sudo cp "$NGINX_CONFIG_DIR/proxy-ssl.conf" "$NGINX_CONFIG_DIR/proxy-ssl.conf.backup.$(date +%Y%m%d_%H%M%S)"
    fi
    
    # ÁßªÂãïÊñ∞Ë®≠ÂÆöÂà∞Ê≠£Á¢∫‰ΩçÁΩÆ
    sudo mv /tmp/proxy-ssl-new.conf "$NGINX_CONFIG_DIR/proxy-ssl.conf"
    sudo chown root:root "$NGINX_CONFIG_DIR/proxy-ssl.conf"
    sudo chmod 644 "$NGINX_CONFIG_DIR/proxy-ssl.conf"
    
    # Ê∏¨Ë©¶ Nginx Ë®≠ÂÆö
    echo "üß™ Ê∏¨Ë©¶ Nginx Ë®≠ÂÆö..."
    sudo nginx -t
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Nginx Ë®≠ÂÆöÊ∏¨Ë©¶ÈÄöÈÅé"
        
        # ÈáçÊñ∞ËºâÂÖ• Nginx
        echo "üîÑ ÈáçÊñ∞ËºâÂÖ• Nginx..."
        sudo systemctl reload nginx
        
        # Á¢∫Ë™ç Nginx ÈñãÊ©üËá™ÂãïÂïüÂãï
        sudo systemctl enable nginx
        
        echo "‚úÖ Nginx Â∑≤ÈáçÊñ∞ËºâÂÖ•"
    else
        echo "‚ùå Nginx Ë®≠ÂÆöÊ∏¨Ë©¶Â§±Êïó"
        exit 1
    fi
    
    # Ê™¢Êü•ÊúçÂãôÁãÄÊÖã
    echo "üìä Ê™¢Êü•ÊúçÂãôÁãÄÊÖã..."
    echo "Nginx ÁãÄÊÖã:"
    sudo systemctl status nginx --no-pager -l
    
    echo "Tomcat ÁãÄÊÖã:"
    sudo systemctl status tomcat10 --no-pager -l || echo "Ë´ãÁ¢∫Ë™ç Tomcat10 Ê≠£Âú®Âü∑Ë°å"
EOF

if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ"
    echo ""
    echo "üìç Ë®™ÂïèÂú∞ÂùÄ:"
    echo "  üåê ÂâçÁ´ØÊáâÁî®: https://$SERVER_HOST"
    echo "  üîß ÂæåÁ´Ø API: https://$SERVER_HOST/prod-api"
    echo "  üìö API ÊñáÊ™î: https://$SERVER_HOST/prod-api/swagger-ui/index.html"
    echo ""
    echo "üìã ÂæåÁ∫åÊ≠•È©ü:"
    echo "  1. Á¢∫Ë™ç Tomcat10 Ê≠£Âú®Âü∑Ë°å‰∏¶Â∑≤ÈÉ®ÁΩ≤ apps WAR"
    echo "  2. Ê™¢Êü•Èò≤ÁÅ´ÁâÜË®≠ÂÆö (ÈñãÊîæ 80, 443 Á´ØÂè£)"
    echo "  3. SSL ÊÜëË≠âÂ∑≤Ë®≠ÂÆö (Let's Encrypt)"
    echo "  4. ÂüüÂêç DNS Ëß£ÊûêÂ∑≤Ë®≠ÂÆö"
    echo ""
    echo "üîç ÊïÖÈöúÊéíÈô§:"
    echo "  - Ê™¢Êü• Nginx Êó•Ë™å: sudo tail -f /var/log/nginx/cheng_vue_error.log"
    echo "  - Ê™¢Êü• Tomcat Êó•Ë™å: sudo tail -f /usr/libexec/tomcat10/logs/catalina.out"
    echo "  - Ê∏¨Ë©¶ÂæåÁ´Ø API: curl https://localhost/prod-api/system/user/profile"
else
    echo "‚ùå ÈÉ®ÁΩ≤ÈÅéÁ®ã‰∏≠ÁôºÁîüÈåØË™§"
    exit 1
fi
